
package WebServices;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.5
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WebServices", targetNamespace = "http://WebServices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WebServices {


    /**
     * 
     * @param descripcion
     * @param precio
     * @param idProveedor
     * @param cantidad
     * @param idTipoEquipo
     * @param idMarcaModelo
     * @return
     *     returns int
     */
    @WebMethod(operationName = "AgregarCompraEquipo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AgregarCompraEquipo", targetNamespace = "http://WebServices/", className = "WebServices.AgregarCompraEquipo")
    @ResponseWrapper(localName = "AgregarCompraEquipoResponse", targetNamespace = "http://WebServices/", className = "WebServices.AgregarCompraEquipoResponse")
    @Action(input = "http://WebServices/WebServices/AgregarCompraEquipoRequest", output = "http://WebServices/WebServices/AgregarCompraEquipoResponse")
    public int agregarCompraEquipo(
        @WebParam(name = "Id_Proveedor", targetNamespace = "")
        int idProveedor,
        @WebParam(name = "IdTipoEquipo", targetNamespace = "")
        int idTipoEquipo,
        @WebParam(name = "IdMarcaModelo", targetNamespace = "")
        int idMarcaModelo,
        @WebParam(name = "Cantidad", targetNamespace = "")
        int cantidad,
        @WebParam(name = "Precio", targetNamespace = "")
        double precio,
        @WebParam(name = "Descripcion", targetNamespace = "")
        String descripcion);

    /**
     * 
     * @param descripcion
     * @param idEquipo
     * @param precio
     * @param idCompra
     * @param idProveedor
     * @param cantidad
     * @return
     *     returns int
     */
    @WebMethod(operationName = "ModificarCompraEquipo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ModificarCompraEquipo", targetNamespace = "http://WebServices/", className = "WebServices.ModificarCompraEquipo")
    @ResponseWrapper(localName = "ModificarCompraEquipoResponse", targetNamespace = "http://WebServices/", className = "WebServices.ModificarCompraEquipoResponse")
    @Action(input = "http://WebServices/WebServices/ModificarCompraEquipoRequest", output = "http://WebServices/WebServices/ModificarCompraEquipoResponse")
    public int modificarCompraEquipo(
        @WebParam(name = "Id_Compra", targetNamespace = "")
        int idCompra,
        @WebParam(name = "Id_Proveedor", targetNamespace = "")
        int idProveedor,
        @WebParam(name = "Id_Equipo", targetNamespace = "")
        int idEquipo,
        @WebParam(name = "Cantidad", targetNamespace = "")
        int cantidad,
        @WebParam(name = "Precio", targetNamespace = "")
        double precio,
        @WebParam(name = "Descripcion", targetNamespace = "")
        String descripcion);

    /**
     * 
     * @param idProveedor
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EliminarCompraEquipo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarCompraEquipo", targetNamespace = "http://WebServices/", className = "WebServices.EliminarCompraEquipo")
    @ResponseWrapper(localName = "EliminarCompraEquipoResponse", targetNamespace = "http://WebServices/", className = "WebServices.EliminarCompraEquipoResponse")
    @Action(input = "http://WebServices/WebServices/EliminarCompraEquipoRequest", output = "http://WebServices/WebServices/EliminarCompraEquipoResponse")
    public int eliminarCompraEquipo(
        @WebParam(name = "Id_Proveedor", targetNamespace = "")
        int idProveedor);

    /**
     * 
     * @param idEmpleado
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EliminarEmpleados")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarEmpleados", targetNamespace = "http://WebServices/", className = "WebServices.EliminarEmpleados")
    @ResponseWrapper(localName = "EliminarEmpleadosResponse", targetNamespace = "http://WebServices/", className = "WebServices.EliminarEmpleadosResponse")
    @Action(input = "http://WebServices/WebServices/EliminarEmpleadosRequest", output = "http://WebServices/WebServices/EliminarEmpleadosResponse")
    public int eliminarEmpleados(
        @WebParam(name = "Id_Empleado", targetNamespace = "")
        int idEmpleado);

    /**
     * 
     * @param idProveedor
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EliminarProveedor")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarProveedor", targetNamespace = "http://WebServices/", className = "WebServices.EliminarProveedor")
    @ResponseWrapper(localName = "EliminarProveedorResponse", targetNamespace = "http://WebServices/", className = "WebServices.EliminarProveedorResponse")
    @Action(input = "http://WebServices/WebServices/EliminarProveedorRequest", output = "http://WebServices/WebServices/EliminarProveedorResponse")
    public int eliminarProveedor(
        @WebParam(name = "Id_Proveedor", targetNamespace = "")
        int idProveedor);

    /**
     * 
     * @param codigoEmpleado
     * @param tipoSolicitud
     * @param apellido
     * @param correo
     * @param idSolicitud
     * @param mensaje
     * @param telefono
     * @param cargo
     * @param nombre
     * @return
     *     returns int
     */
    @WebMethod(operationName = "ModificarSolicitud")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ModificarSolicitud", targetNamespace = "http://WebServices/", className = "WebServices.ModificarSolicitud")
    @ResponseWrapper(localName = "ModificarSolicitudResponse", targetNamespace = "http://WebServices/", className = "WebServices.ModificarSolicitudResponse")
    @Action(input = "http://WebServices/WebServices/ModificarSolicitudRequest", output = "http://WebServices/WebServices/ModificarSolicitudResponse")
    public int modificarSolicitud(
        @WebParam(name = "Id_Solicitud", targetNamespace = "")
        int idSolicitud,
        @WebParam(name = "Nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "Apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "Codigo_Empleado", targetNamespace = "")
        String codigoEmpleado,
        @WebParam(name = "Correo", targetNamespace = "")
        String correo,
        @WebParam(name = "Telefono", targetNamespace = "")
        String telefono,
        @WebParam(name = "Cargo", targetNamespace = "")
        String cargo,
        @WebParam(name = "Tipo_Solicitud", targetNamespace = "")
        String tipoSolicitud,
        @WebParam(name = "Mensaje", targetNamespace = "")
        String mensaje);

    /**
     * 
     * @param ciudad
     * @param idProveedor
     * @param apellido
     * @param correo
     * @param nit
     * @param direccion
     * @param empresa
     * @param telefono
     * @param nombre
     * @param giro
     * @param pais
     * @return
     *     returns int
     */
    @WebMethod(operationName = "ModificarProveedor")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ModificarProveedor", targetNamespace = "http://WebServices/", className = "WebServices.ModificarProveedor")
    @ResponseWrapper(localName = "ModificarProveedorResponse", targetNamespace = "http://WebServices/", className = "WebServices.ModificarProveedorResponse")
    @Action(input = "http://WebServices/WebServices/ModificarProveedorRequest", output = "http://WebServices/WebServices/ModificarProveedorResponse")
    public int modificarProveedor(
        @WebParam(name = "Id_Proveedor", targetNamespace = "")
        int idProveedor,
        @WebParam(name = "Empresa", targetNamespace = "")
        String empresa,
        @WebParam(name = "Nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "Apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "Nit", targetNamespace = "")
        String nit,
        @WebParam(name = "Giro", targetNamespace = "")
        String giro,
        @WebParam(name = "Correo", targetNamespace = "")
        String correo,
        @WebParam(name = "Telefono", targetNamespace = "")
        String telefono,
        @WebParam(name = "Direccion", targetNamespace = "")
        String direccion,
        @WebParam(name = "Ciudad", targetNamespace = "")
        String ciudad,
        @WebParam(name = "Pais", targetNamespace = "")
        String pais);

    /**
     * 
     * @return
     *     returns java.util.List<WebServices.LCargoEmpleado>
     */
    @WebMethod(operationName = "ListarCargoEmpleado")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarCargoEmpleado", targetNamespace = "http://WebServices/", className = "WebServices.ListarCargoEmpleado")
    @ResponseWrapper(localName = "ListarCargoEmpleadoResponse", targetNamespace = "http://WebServices/", className = "WebServices.ListarCargoEmpleadoResponse")
    @Action(input = "http://WebServices/WebServices/ListarCargoEmpleadoRequest", output = "http://WebServices/WebServices/ListarCargoEmpleadoResponse")
    public List<LCargoEmpleado> listarCargoEmpleado();

    /**
     * 
     * @param estadoAsignado
     * @param codigoEmpleado
     * @param tipoSolicitud
     * @param apellido
     * @param correo
     * @param idSolicitud
     * @param mensaje
     * @param telefono
     * @param cargo
     * @param nombre
     * @param estadoSolicitud
     * @return
     *     returns int
     */
    @WebMethod(operationName = "ActualizarSolicitud")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ActualizarSolicitud", targetNamespace = "http://WebServices/", className = "WebServices.ActualizarSolicitud")
    @ResponseWrapper(localName = "ActualizarSolicitudResponse", targetNamespace = "http://WebServices/", className = "WebServices.ActualizarSolicitudResponse")
    @Action(input = "http://WebServices/WebServices/ActualizarSolicitudRequest", output = "http://WebServices/WebServices/ActualizarSolicitudResponse")
    public int actualizarSolicitud(
        @WebParam(name = "Id_Solicitud", targetNamespace = "")
        int idSolicitud,
        @WebParam(name = "Nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "Apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "Codigo_Empleado", targetNamespace = "")
        String codigoEmpleado,
        @WebParam(name = "Correo", targetNamespace = "")
        String correo,
        @WebParam(name = "Telefono", targetNamespace = "")
        String telefono,
        @WebParam(name = "Cargo", targetNamespace = "")
        String cargo,
        @WebParam(name = "Tipo_Solicitud", targetNamespace = "")
        String tipoSolicitud,
        @WebParam(name = "Estado_Asignado", targetNamespace = "")
        Boolean estadoAsignado,
        @WebParam(name = "Estado_Solicitud", targetNamespace = "")
        String estadoSolicitud,
        @WebParam(name = "Mensaje", targetNamespace = "")
        String mensaje);

    /**
     * 
     * @param idSolcitud
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EliminarSolicitud")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarSolicitud", targetNamespace = "http://WebServices/", className = "WebServices.EliminarSolicitud")
    @ResponseWrapper(localName = "EliminarSolicitudResponse", targetNamespace = "http://WebServices/", className = "WebServices.EliminarSolicitudResponse")
    @Action(input = "http://WebServices/WebServices/EliminarSolicitudRequest", output = "http://WebServices/WebServices/EliminarSolicitudResponse")
    public int eliminarSolicitud(
        @WebParam(name = "Id_Solcitud", targetNamespace = "")
        int idSolcitud);

    /**
     * 
     * @param codigoEmpleado
     * @param tipoSolicitud
     * @param apellido
     * @param correo
     * @param mensaje
     * @param telefono
     * @param cargo
     * @param nombre
     * @return
     *     returns int
     */
    @WebMethod(operationName = "AgregarSolicitudEquipo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AgregarSolicitudEquipo", targetNamespace = "http://WebServices/", className = "WebServices.AgregarSolicitudEquipo")
    @ResponseWrapper(localName = "AgregarSolicitudEquipoResponse", targetNamespace = "http://WebServices/", className = "WebServices.AgregarSolicitudEquipoResponse")
    @Action(input = "http://WebServices/WebServices/AgregarSolicitudEquipoRequest", output = "http://WebServices/WebServices/AgregarSolicitudEquipoResponse")
    public int agregarSolicitudEquipo(
        @WebParam(name = "Nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "Apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "Codigo_Empleado", targetNamespace = "")
        String codigoEmpleado,
        @WebParam(name = "Correo", targetNamespace = "")
        String correo,
        @WebParam(name = "Telefono", targetNamespace = "")
        String telefono,
        @WebParam(name = "Cargo", targetNamespace = "")
        String cargo,
        @WebParam(name = "Tipo_Solicitud", targetNamespace = "")
        String tipoSolicitud,
        @WebParam(name = "Mensaje", targetNamespace = "")
        String mensaje);

    /**
     * 
     * @param estado
     * @param codigoEmpleado
     * @param idEmpleado
     * @param apellido
     * @param correo
     * @param departamento
     * @param cargo
     * @param nombre
     * @return
     *     returns int
     */
    @WebMethod(operationName = "ModificarEmpleado")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ModificarEmpleado", targetNamespace = "http://WebServices/", className = "WebServices.ModificarEmpleado")
    @ResponseWrapper(localName = "ModificarEmpleadoResponse", targetNamespace = "http://WebServices/", className = "WebServices.ModificarEmpleadoResponse")
    @Action(input = "http://WebServices/WebServices/ModificarEmpleadoRequest", output = "http://WebServices/WebServices/ModificarEmpleadoResponse")
    public int modificarEmpleado(
        @WebParam(name = "Id_Empleado", targetNamespace = "")
        int idEmpleado,
        @WebParam(name = "Nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "Apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "Codigo_Empleado", targetNamespace = "")
        String codigoEmpleado,
        @WebParam(name = "Correo", targetNamespace = "")
        String correo,
        @WebParam(name = "Cargo", targetNamespace = "")
        int cargo,
        @WebParam(name = "Departamento", targetNamespace = "")
        int departamento,
        @WebParam(name = "Estado", targetNamespace = "")
        Boolean estado);

    /**
     * 
     * @return
     *     returns java.util.List<WebServices.LMarca>
     */
    @WebMethod(operationName = "ListarMarca")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarMarca", targetNamespace = "http://WebServices/", className = "WebServices.ListarMarca")
    @ResponseWrapper(localName = "ListarMarcaResponse", targetNamespace = "http://WebServices/", className = "WebServices.ListarMarcaResponse")
    @Action(input = "http://WebServices/WebServices/ListarMarcaRequest", output = "http://WebServices/WebServices/ListarMarcaResponse")
    public List<LMarca> listarMarca();

    /**
     * 
     * @return
     *     returns java.util.List<WebServices.LUsuarios>
     */
    @WebMethod(operationName = "ListarUsuario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarUsuario", targetNamespace = "http://WebServices/", className = "WebServices.ListarUsuario")
    @ResponseWrapper(localName = "ListarUsuarioResponse", targetNamespace = "http://WebServices/", className = "WebServices.ListarUsuarioResponse")
    @Action(input = "http://WebServices/WebServices/ListarUsuarioRequest", output = "http://WebServices/WebServices/ListarUsuarioResponse")
    public List<LUsuarios> listarUsuario();

    /**
     * 
     * @param idUsuario
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EliminarUsuario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarUsuario", targetNamespace = "http://WebServices/", className = "WebServices.EliminarUsuario")
    @ResponseWrapper(localName = "EliminarUsuarioResponse", targetNamespace = "http://WebServices/", className = "WebServices.EliminarUsuarioResponse")
    @Action(input = "http://WebServices/WebServices/EliminarUsuarioRequest", output = "http://WebServices/WebServices/EliminarUsuarioResponse")
    public int eliminarUsuario(
        @WebParam(name = "IdUsuario", targetNamespace = "")
        int idUsuario);

    /**
     * 
     * @return
     *     returns java.util.List<WebServices.LEmpleados>
     */
    @WebMethod(operationName = "ListarEmpleados")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarEmpleados", targetNamespace = "http://WebServices/", className = "WebServices.ListarEmpleados")
    @ResponseWrapper(localName = "ListarEmpleadosResponse", targetNamespace = "http://WebServices/", className = "WebServices.ListarEmpleadosResponse")
    @Action(input = "http://WebServices/WebServices/ListarEmpleadosRequest", output = "http://WebServices/WebServices/ListarEmpleadosResponse")
    public List<LEmpleados> listarEmpleados();

    /**
     * 
     * @return
     *     returns java.util.List<WebServices.PrivilegiosGT>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "privilegios", targetNamespace = "http://WebServices/", className = "WebServices.Privilegios")
    @ResponseWrapper(localName = "privilegiosResponse", targetNamespace = "http://WebServices/", className = "WebServices.PrivilegiosResponse")
    @Action(input = "http://WebServices/WebServices/privilegiosRequest", output = "http://WebServices/WebServices/privilegiosResponse")
    public List<PrivilegiosGT> privilegios();

    /**
     * 
     * @return
     *     returns java.util.List<WebServices.LEquipos>
     */
    @WebMethod(operationName = "ListarEquipos")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarEquipos", targetNamespace = "http://WebServices/", className = "WebServices.ListarEquipos")
    @ResponseWrapper(localName = "ListarEquiposResponse", targetNamespace = "http://WebServices/", className = "WebServices.ListarEquiposResponse")
    @Action(input = "http://WebServices/WebServices/ListarEquiposRequest", output = "http://WebServices/WebServices/ListarEquiposResponse")
    public List<LEquipos> listarEquipos();

    /**
     * 
     * @return
     *     returns java.util.List<WebServices.LCompras>
     */
    @WebMethod(operationName = "ListarCompras")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarCompras", targetNamespace = "http://WebServices/", className = "WebServices.ListarCompras")
    @ResponseWrapper(localName = "ListarComprasResponse", targetNamespace = "http://WebServices/", className = "WebServices.ListarComprasResponse")
    @Action(input = "http://WebServices/WebServices/ListarComprasRequest", output = "http://WebServices/WebServices/ListarComprasResponse")
    public List<LCompras> listarCompras();

    /**
     * 
     * @return
     *     returns java.util.List<WebServices.LDepartEmp>
     */
    @WebMethod(operationName = "ListarDepartEmp")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarDepartEmp", targetNamespace = "http://WebServices/", className = "WebServices.ListarDepartEmp")
    @ResponseWrapper(localName = "ListarDepartEmpResponse", targetNamespace = "http://WebServices/", className = "WebServices.ListarDepartEmpResponse")
    @Action(input = "http://WebServices/WebServices/ListarDepartEmpRequest", output = "http://WebServices/WebServices/ListarDepartEmpResponse")
    public List<LDepartEmp> listarDepartEmp();

    /**
     * 
     * @param password
     * @param login
     * @return
     *     returns WebServices.Usuarios
     */
    @WebMethod(operationName = "ValidarUsuario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ValidarUsuario", targetNamespace = "http://WebServices/", className = "WebServices.ValidarUsuario")
    @ResponseWrapper(localName = "ValidarUsuarioResponse", targetNamespace = "http://WebServices/", className = "WebServices.ValidarUsuarioResponse")
    @Action(input = "http://WebServices/WebServices/ValidarUsuarioRequest", output = "http://WebServices/WebServices/ValidarUsuarioResponse")
    public Usuarios validarUsuario(
        @WebParam(name = "Login", targetNamespace = "")
        String login,
        @WebParam(name = "Password", targetNamespace = "")
        String password);

    /**
     * 
     * @param password
     * @param estado
     * @param login
     * @param nombre
     * @param idPrivilegio
     * @param email
     * @return
     *     returns int
     */
    @WebMethod(operationName = "AgregarUsuario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AgregarUsuario", targetNamespace = "http://WebServices/", className = "WebServices.AgregarUsuario")
    @ResponseWrapper(localName = "AgregarUsuarioResponse", targetNamespace = "http://WebServices/", className = "WebServices.AgregarUsuarioResponse")
    @Action(input = "http://WebServices/WebServices/AgregarUsuarioRequest", output = "http://WebServices/WebServices/AgregarUsuarioResponse")
    public int agregarUsuario(
        @WebParam(name = "Nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "Login", targetNamespace = "")
        String login,
        @WebParam(name = "Password", targetNamespace = "")
        String password,
        @WebParam(name = "Email", targetNamespace = "")
        String email,
        @WebParam(name = "Estado", targetNamespace = "")
        boolean estado,
        @WebParam(name = "IdPrivilegio", targetNamespace = "")
        int idPrivilegio);

    /**
     * 
     * @param estado
     * @param idUsuario
     * @param login
     * @param nombre
     * @param idPrivilegio
     * @param email
     * @return
     *     returns java.util.List<WebServices.Usuarios>
     */
    @WebMethod(operationName = "BuscarUsuario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BuscarUsuario", targetNamespace = "http://WebServices/", className = "WebServices.BuscarUsuario")
    @ResponseWrapper(localName = "BuscarUsuarioResponse", targetNamespace = "http://WebServices/", className = "WebServices.BuscarUsuarioResponse")
    @Action(input = "http://WebServices/WebServices/BuscarUsuarioRequest", output = "http://WebServices/WebServices/BuscarUsuarioResponse")
    public List<Usuarios> buscarUsuario(
        @WebParam(name = "IdUsuario", targetNamespace = "")
        int idUsuario,
        @WebParam(name = "Nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "Login", targetNamespace = "")
        String login,
        @WebParam(name = "Email", targetNamespace = "")
        String email,
        @WebParam(name = "Estado", targetNamespace = "")
        String estado,
        @WebParam(name = "IdPrivilegio", targetNamespace = "")
        int idPrivilegio);

    /**
     * 
     * @param password
     * @param estado
     * @param idUsuario
     * @param login
     * @param nombre
     * @param idPrivilegio
     * @param email
     * @return
     *     returns int
     */
    @WebMethod(operationName = "ModificarUsuario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ModificarUsuario", targetNamespace = "http://WebServices/", className = "WebServices.ModificarUsuario")
    @ResponseWrapper(localName = "ModificarUsuarioResponse", targetNamespace = "http://WebServices/", className = "WebServices.ModificarUsuarioResponse")
    @Action(input = "http://WebServices/WebServices/ModificarUsuarioRequest", output = "http://WebServices/WebServices/ModificarUsuarioResponse")
    public int modificarUsuario(
        @WebParam(name = "IdUsuario", targetNamespace = "")
        int idUsuario,
        @WebParam(name = "Nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "Login", targetNamespace = "")
        String login,
        @WebParam(name = "Password", targetNamespace = "")
        String password,
        @WebParam(name = "Email", targetNamespace = "")
        String email,
        @WebParam(name = "Estado", targetNamespace = "")
        boolean estado,
        @WebParam(name = "IdPrivilegio", targetNamespace = "")
        int idPrivilegio);

    /**
     * 
     * @param ciudad
     * @param apellido
     * @param correo
     * @param nit
     * @param direccion
     * @param empresa
     * @param telefono
     * @param nombre
     * @param giro
     * @param pais
     * @return
     *     returns int
     */
    @WebMethod(operationName = "AgregarProveedor")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AgregarProveedor", targetNamespace = "http://WebServices/", className = "WebServices.AgregarProveedor")
    @ResponseWrapper(localName = "AgregarProveedorResponse", targetNamespace = "http://WebServices/", className = "WebServices.AgregarProveedorResponse")
    @Action(input = "http://WebServices/WebServices/AgregarProveedorRequest", output = "http://WebServices/WebServices/AgregarProveedorResponse")
    public int agregarProveedor(
        @WebParam(name = "Empresa", targetNamespace = "")
        String empresa,
        @WebParam(name = "Nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "Apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "Nit", targetNamespace = "")
        String nit,
        @WebParam(name = "Giro", targetNamespace = "")
        String giro,
        @WebParam(name = "Correo", targetNamespace = "")
        String correo,
        @WebParam(name = "Telefono", targetNamespace = "")
        String telefono,
        @WebParam(name = "Direccion", targetNamespace = "")
        String direccion,
        @WebParam(name = "Ciudad", targetNamespace = "")
        String ciudad,
        @WebParam(name = "Pais", targetNamespace = "")
        String pais);

    /**
     * 
     * @return
     *     returns java.util.List<WebServices.Tecnico>
     */
    @WebMethod(operationName = "TecnicoAsignado")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "TecnicoAsignado", targetNamespace = "http://WebServices/", className = "WebServices.TecnicoAsignado")
    @ResponseWrapper(localName = "TecnicoAsignadoResponse", targetNamespace = "http://WebServices/", className = "WebServices.TecnicoAsignadoResponse")
    @Action(input = "http://WebServices/WebServices/TecnicoAsignadoRequest", output = "http://WebServices/WebServices/TecnicoAsignadoResponse")
    public List<Tecnico> tecnicoAsignado();

    /**
     * 
     * @param estado
     * @param ciudad
     * @param idProveedor
     * @param apellido
     * @param correo
     * @param nit
     * @param direccion
     * @param empresa
     * @param telefono
     * @param nombre
     * @param giro
     * @param pais
     * @return
     *     returns java.util.List<WebServices.Proveedores>
     */
    @WebMethod(operationName = "BuscarProveedor")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BuscarProveedor", targetNamespace = "http://WebServices/", className = "WebServices.BuscarProveedor")
    @ResponseWrapper(localName = "BuscarProveedorResponse", targetNamespace = "http://WebServices/", className = "WebServices.BuscarProveedorResponse")
    @Action(input = "http://WebServices/WebServices/BuscarProveedorRequest", output = "http://WebServices/WebServices/BuscarProveedorResponse")
    public List<Proveedores> buscarProveedor(
        @WebParam(name = "Id_Proveedor", targetNamespace = "")
        int idProveedor,
        @WebParam(name = "Empresa", targetNamespace = "")
        String empresa,
        @WebParam(name = "Nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "Apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "Nit", targetNamespace = "")
        String nit,
        @WebParam(name = "Giro", targetNamespace = "")
        String giro,
        @WebParam(name = "Correo", targetNamespace = "")
        String correo,
        @WebParam(name = "Direccion", targetNamespace = "")
        String direccion,
        @WebParam(name = "Telefono", targetNamespace = "")
        String telefono,
        @WebParam(name = "Ciudad", targetNamespace = "")
        String ciudad,
        @WebParam(name = "Pais", targetNamespace = "")
        String pais,
        @WebParam(name = "Estado", targetNamespace = "")
        String estado);

    /**
     * 
     * @param estado
     * @param codigoEmpleado
     * @param idDepartamentoEmpleado
     * @param apellido
     * @param correo
     * @param idCargoEmpleado
     * @param nombre
     * @return
     *     returns int
     */
    @WebMethod(operationName = "AgregarEmpleado")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AgregarEmpleado", targetNamespace = "http://WebServices/", className = "WebServices.AgregarEmpleado")
    @ResponseWrapper(localName = "AgregarEmpleadoResponse", targetNamespace = "http://WebServices/", className = "WebServices.AgregarEmpleadoResponse")
    @Action(input = "http://WebServices/WebServices/AgregarEmpleadoRequest", output = "http://WebServices/WebServices/AgregarEmpleadoResponse")
    public int agregarEmpleado(
        @WebParam(name = "Nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "Apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "Codigo_Empleado", targetNamespace = "")
        String codigoEmpleado,
        @WebParam(name = "Correo", targetNamespace = "")
        String correo,
        @WebParam(name = "IdCargoEmpleado", targetNamespace = "")
        int idCargoEmpleado,
        @WebParam(name = "IdDepartamentoEmpleado", targetNamespace = "")
        int idDepartamentoEmpleado,
        @WebParam(name = "Estado", targetNamespace = "")
        Boolean estado);

    /**
     * 
     * @param idEquipo
     * @return
     *     returns int
     */
    @WebMethod(operationName = "EliminarEquipo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarEquipo", targetNamespace = "http://WebServices/", className = "WebServices.EliminarEquipo")
    @ResponseWrapper(localName = "EliminarEquipoResponse", targetNamespace = "http://WebServices/", className = "WebServices.EliminarEquipoResponse")
    @Action(input = "http://WebServices/WebServices/EliminarEquipoRequest", output = "http://WebServices/WebServices/EliminarEquipoResponse")
    public int eliminarEquipo(
        @WebParam(name = "Id_Equipo", targetNamespace = "")
        int idEquipo);

    /**
     * 
     * @return
     *     returns java.util.List<WebServices.TipoEquipoGT>
     */
    @WebMethod(operationName = "TipoEquipo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "TipoEquipo", targetNamespace = "http://WebServices/", className = "WebServices.TipoEquipo")
    @ResponseWrapper(localName = "TipoEquipoResponse", targetNamespace = "http://WebServices/", className = "WebServices.TipoEquipoResponse")
    @Action(input = "http://WebServices/WebServices/TipoEquipoRequest", output = "http://WebServices/WebServices/TipoEquipoResponse")
    public List<TipoEquipoGT> tipoEquipo();

    /**
     * 
     * @return
     *     returns java.util.List<WebServices.LProveedores>
     */
    @WebMethod(operationName = "ListarProvedores")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListarProvedores", targetNamespace = "http://WebServices/", className = "WebServices.ListarProvedores")
    @ResponseWrapper(localName = "ListarProvedoresResponse", targetNamespace = "http://WebServices/", className = "WebServices.ListarProvedoresResponse")
    @Action(input = "http://WebServices/WebServices/ListarProvedoresRequest", output = "http://WebServices/WebServices/ListarProvedoresResponse")
    public List<LProveedores> listarProvedores();

    /**
     * 
     * @param marca
     * @param caracteristicas
     * @param estado
     * @param serie
     * @param stock
     * @param modelo
     * @param tipoEquipo
     * @return
     *     returns int
     */
    @WebMethod(operationName = "AgregarEquipo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "AgregarEquipo", targetNamespace = "http://WebServices/", className = "WebServices.AgregarEquipo")
    @ResponseWrapper(localName = "AgregarEquipoResponse", targetNamespace = "http://WebServices/", className = "WebServices.AgregarEquipoResponse")
    @Action(input = "http://WebServices/WebServices/AgregarEquipoRequest", output = "http://WebServices/WebServices/AgregarEquipoResponse")
    public int agregarEquipo(
        @WebParam(name = "Marca", targetNamespace = "")
        String marca,
        @WebParam(name = "Modelo", targetNamespace = "")
        String modelo,
        @WebParam(name = "Serie", targetNamespace = "")
        String serie,
        @WebParam(name = "Caracteristicas", targetNamespace = "")
        String caracteristicas,
        @WebParam(name = "Stock", targetNamespace = "")
        String stock,
        @WebParam(name = "Estado", targetNamespace = "")
        Boolean estado,
        @WebParam(name = "Tipo_Equipo", targetNamespace = "")
        int tipoEquipo);

    /**
     * 
     * @param estado
     * @param codigoEmpleado
     * @param correo
     * @param idSolicitud
     * @return
     *     returns java.util.List<WebServices.SolicitudEquipos>
     */
    @WebMethod(operationName = "BuscarSolicitud")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BuscarSolicitud", targetNamespace = "http://WebServices/", className = "WebServices.BuscarSolicitud")
    @ResponseWrapper(localName = "BuscarSolicitudResponse", targetNamespace = "http://WebServices/", className = "WebServices.BuscarSolicitudResponse")
    @Action(input = "http://WebServices/WebServices/BuscarSolicitudRequest", output = "http://WebServices/WebServices/BuscarSolicitudResponse")
    public List<SolicitudEquipos> buscarSolicitud(
        @WebParam(name = "Id_Solicitud", targetNamespace = "")
        int idSolicitud,
        @WebParam(name = "Codigo_Empleado", targetNamespace = "")
        String codigoEmpleado,
        @WebParam(name = "Correo", targetNamespace = "")
        String correo,
        @WebParam(name = "Estado", targetNamespace = "")
        String estado);

    /**
     * 
     * @param idEquipo
     * @param estado
     * @param serie
     * @param idTipoEquipo
     * @param modelo
     * @return
     *     returns java.util.List<WebServices.Equipos>
     */
    @WebMethod(operationName = "BuscarEquipo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BuscarEquipo", targetNamespace = "http://WebServices/", className = "WebServices.BuscarEquipo")
    @ResponseWrapper(localName = "BuscarEquipoResponse", targetNamespace = "http://WebServices/", className = "WebServices.BuscarEquipoResponse")
    @Action(input = "http://WebServices/WebServices/BuscarEquipoRequest", output = "http://WebServices/WebServices/BuscarEquipoResponse")
    public List<Equipos> buscarEquipo(
        @WebParam(name = "Id_Equipo", targetNamespace = "")
        int idEquipo,
        @WebParam(name = "Modelo", targetNamespace = "")
        String modelo,
        @WebParam(name = "Serie", targetNamespace = "")
        String serie,
        @WebParam(name = "IdTipoEquipo", targetNamespace = "")
        int idTipoEquipo,
        @WebParam(name = "Estado", targetNamespace = "")
        String estado);

    /**
     * 
     * @return
     *     returns java.util.List<WebServices.Mproveedores>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "mostrarProveedores", targetNamespace = "http://WebServices/", className = "WebServices.MostrarProveedores")
    @ResponseWrapper(localName = "mostrarProveedoresResponse", targetNamespace = "http://WebServices/", className = "WebServices.MostrarProveedoresResponse")
    @Action(input = "http://WebServices/WebServices/mostrarProveedoresRequest", output = "http://WebServices/WebServices/mostrarProveedoresResponse")
    public List<Mproveedores> mostrarProveedores();

    /**
     * 
     * @param estado
     * @param codigoEmpleado
     * @param idEmpleado
     * @param apellido
     * @return
     *     returns java.util.List<WebServices.Empleados>
     */
    @WebMethod(operationName = "BuscarEmpleado")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "BuscarEmpleado", targetNamespace = "http://WebServices/", className = "WebServices.BuscarEmpleado")
    @ResponseWrapper(localName = "BuscarEmpleadoResponse", targetNamespace = "http://WebServices/", className = "WebServices.BuscarEmpleadoResponse")
    @Action(input = "http://WebServices/WebServices/BuscarEmpleadoRequest", output = "http://WebServices/WebServices/BuscarEmpleadoResponse")
    public List<Empleados> buscarEmpleado(
        @WebParam(name = "Id_Empleado", targetNamespace = "")
        int idEmpleado,
        @WebParam(name = "Apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "Codigo_Empleado", targetNamespace = "")
        String codigoEmpleado,
        @WebParam(name = "Estado", targetNamespace = "")
        String estado);

    /**
     * 
     * @param marca
     * @param idEquipo
     * @param caracteristicas
     * @param estado
     * @param serie
     * @param stock
     * @param modelo
     * @param tipoEquipo
     * @return
     *     returns int
     */
    @WebMethod(operationName = "ModificarEquipo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ModificarEquipo", targetNamespace = "http://WebServices/", className = "WebServices.ModificarEquipo")
    @ResponseWrapper(localName = "ModificarEquipoResponse", targetNamespace = "http://WebServices/", className = "WebServices.ModificarEquipoResponse")
    @Action(input = "http://WebServices/WebServices/ModificarEquipoRequest", output = "http://WebServices/WebServices/ModificarEquipoResponse")
    public int modificarEquipo(
        @WebParam(name = "Id_Equipo", targetNamespace = "")
        int idEquipo,
        @WebParam(name = "Marca", targetNamespace = "")
        String marca,
        @WebParam(name = "Modelo", targetNamespace = "")
        String modelo,
        @WebParam(name = "Serie", targetNamespace = "")
        String serie,
        @WebParam(name = "Caracteristicas", targetNamespace = "")
        String caracteristicas,
        @WebParam(name = "Stock", targetNamespace = "")
        String stock,
        @WebParam(name = "Estado", targetNamespace = "")
        Boolean estado,
        @WebParam(name = "Tipo_Equipo", targetNamespace = "")
        int tipoEquipo);

    /**
     * 
     * @param codigoEmpleado
     * @param tipoSolicitud
     * @param apellido
     * @param correo
     * @param mensaje
     * @param telefono
     * @param cargo
     * @param nombre
     * @param estadoSolicitud
     * @return
     *     returns int
     */
    @WebMethod(operationName = "CrearSolicitud")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CrearSolicitud", targetNamespace = "http://WebServices/", className = "WebServices.CrearSolicitud")
    @ResponseWrapper(localName = "CrearSolicitudResponse", targetNamespace = "http://WebServices/", className = "WebServices.CrearSolicitudResponse")
    @Action(input = "http://WebServices/WebServices/CrearSolicitudRequest", output = "http://WebServices/WebServices/CrearSolicitudResponse")
    public int crearSolicitud(
        @WebParam(name = "Nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "Apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "Codigo_Empleado", targetNamespace = "")
        String codigoEmpleado,
        @WebParam(name = "Correo", targetNamespace = "")
        String correo,
        @WebParam(name = "Telefono", targetNamespace = "")
        String telefono,
        @WebParam(name = "Cargo", targetNamespace = "")
        String cargo,
        @WebParam(name = "Tipo_Solicitud", targetNamespace = "")
        String tipoSolicitud,
        @WebParam(name = "Estado_Solicitud", targetNamespace = "")
        String estadoSolicitud,
        @WebParam(name = "Mensaje", targetNamespace = "")
        String mensaje);

}
